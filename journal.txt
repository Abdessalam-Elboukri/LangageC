-----------------08/09:11:2021----------------------

Pendant ces deux jours , j'ai appris quelques compétences grace au changement des infos plus le pratique de nouveux concepts de programmation .

Tout d'abord le premier jour on as commencer par la presentation de chacun de mes camarades et moi, la ou j'ai pris connaisance de ces derniers ,on plus de ca j'ai trouver des points communs qui me lie avec eux, on plus de ca j'ai aussi decouvrer la pedagogie de l'ecole.

Ensuite, pour ce qui concerne la deuxieme journé, on as aborder le git et le github,ou jai appris la difference entre les deux et l'importance de chaque outils. puis on as commencer la partie pratique avec l'utilisations des commandes Git .


-------------------10:11:2021------------------------

Aujourd'hui était spécial, D'abord on as commencer par un jeu de quiz contient 61 questions pour tester nos informations sur Git, Github, Language C et Algoritme, Cela a pris une heure ou j'ai reponser sur 37 bonne reponses,  
Aussi dans ce jeu , j'ai compris le programme et ce que on vas apprendre dans cette periode de ssas. 
Ensuite on as commecer d'etuder le luangage C ,on as aborder l'histoire et l'utilisations de ce dernier,  plus les types de données et les opérateur . on vas attaquer les challenges .



-------------------11:11:2021------------------------

Aujourd'hui on a continué les challenges, c'était super surtout quand on travaillait en équipe. je comprends les avantages de travailler en group. 
nous avons échangé des informations et résolé 12 défis sur 13. certains de ces défis étaient difficiles mais nous les avons résolus lorsque nous avons utilisé le codage en direct via Discord. 
Parmi les choses que j'ai appris aujourd'hui.
    comment écrire des programmes dans le langage c comme ;
	-un programme qui écrit vos informations personnelles.
	-un programme qui convertit Fahrenheit en c.
	-un programme qui convertit les miles en km ou le mètre en mile.
	-un programme qui calcule une distance entre deux points.
	-un programme qui calcule la circonférence de cercle ettriangle.
	-un programme qui fait un calcul de nombreuses opérations.


-------------------12:11:2021------------------------

Aujourd'hui. L'enseignant nous lance des défis,
c'était agréable, nous avons continué à travailler en équipe,

ces défis concernaient les conditions du langage c, j'ai compris comment créer des programmes qui affichent la sortie en fonction des utilisateurs, et pour cela, nous avons utilisé l'instruction "switch case" et "if else".

a la fin de journeé on as realizer un live coding pour correct ces Challenges.


---------------13/14(week-end):11:2021----------------

Ce week-end a été génial,j'ai fait une petite pause.Puis j’ai commencé à réviser toutes les activités de cette semaine, aussi j’ai continué les défis de conditions, une conclusion sur le langage C, Ou j'ai avancé dans les conditions et les boucles.

ca fait une semaine merveilleuse, j’ai rencontré d’autres candidats qui ont les mêmes intérêts que moi, la façon dont nous étudions nous permet le changement du savoir-faire

Et j’aime la façon dont le formateur nous fait travailler en équipe,
on' etait adapter au programme et créer un bon environnement de travail.

Pour cela je suis tellement excité de commencer une nouvelle semaine pour prendre un maximum d’informations sur la programmation.


-------------------15:11:2021------------------------

Aujourd'hui c'était le premier jour de la nouvelle semaine, j'ai continué les conditions avec une révision avec l'équipe, le matin c'était une réunion avec les staff et mosieur Frédéric Bardeau Co-fondateur et Président de Simplon SAS ,j'ai compris beaucoup de chose pour faire de l'inclusion numerique une force pour l'avenir .et apres pendant l'apres midi on as realiser un quiz ,
et je comprends certains échecs donc j'ai dû réviser les conditions et pratiquer plus de défis.



-------------------16:11:2021------------------------

Pendant cet journeé, on as pratiquer un live coding du variables et les conditions,
À partir de ces défis, j'ai compris comment configurer les conditions et comment optimiser votre programme avec moins de codage de ligne, cela m'a été utile.

l'après-midi, l'autre équipe doit présenter des sujets algorithmiques ;
histoire, l'importance et pourquoi nous devrions l'utiliser, comment le configurer avant de coder, et les avantages de celui-ci.

par exemple, ils ont donné un exemple de lampe qui ne fonctionne pas,
nous devrions ignorer les étapes pour trouver pourquoi ce n'est pas le cas,
ces étapes sont des algorithmes mais ça change de l'un à l'autre,
mais la situation finale est que la lampe fonctionnera.

il en est de même en programmation, pour créer un programme qui résout un problème, il y a beaucoup de solutions mais il faut calculer "Big O Notation", c'est la complexité en temps et en espace d'un algorithme, qui a pris peu de temps et peu complexité spatiale,
est considéré comme le meilleur algorithme de tous. Un développeur catégorise également comment trouver le meilleur cas, le cas moyen et le pire des cas de l'algorithme.
et l'exemple sur lequel nous avons travaillé dans la présentation est de donner une plage de 0 à 50 et l'utilisateur choisira un nombre à partir de là et nous devrions le trouver avec moins d'essai.
pour cela, nous avons utilisé deux types de recherche le premier s'appelle "leaner" donc je vais commencer à partir de 0,1,2...et comme ça, jusqu'à trouver ce nombre mais il y a beaucoup d'essais.
l'autre choix est dit « binaire » ; après que l'utilisateur ait pensé un numéro, je choisirai un numéro du milieu et je verrai si le numéro que je dois trouver est supérieur ou inférieur pour couper l'autre partie et comme ça j'ai enlevé 50% des possibilités.
cette fonction binaire a "big o notation" plus petite que l'autre,
donc c'est valable.

mais si les nombres étaient aléatoirement à l'intérieur de la plage.
le binaire ne fonctionnera pas et mettra beaucoup de temps à fonctionner,
mais nous pouvons ajouter une fonction qui ordonnera ces nombres et calculera "big o notation" et verra. les nombres sont les données de ce programme
il faut donc savoir comment traiter ces données pour savoir quel algorithme fonctionnera et ce qu'on appelle une structure de données.

comprendre les algorithmes vous aidera à résoudre un problème ou à trouver la meilleure méthode de codage pour créer votre programme et gagner beaucoup de temps.


-------------------17:11:2021------------------------

Pendant cet journeé , on as contunier les challanges du boucles et les functions,

tout d'abord nous avons un défi complexe dont nous avons besoin pour créer un programme, il sortira une pyramide, mais le formateur nous a bien expliqué ce défi en utilisant un algorithme,
 l'utilisateur donnera un numéro, c'est le nombre total de numéros de ligne et la pyramide commencera par le haut avec une étoile et la deuxième ligne avec trois étoiles, donc chaque ligne qui génère deux étoiles supplémentaires,

tandis que l'espace va diminuer
    par exemple pour 3 lignes{
                            ligne = 1( étoiles = 1 et espace = 2)
                            ligne = 2( étoiles = 3 et espace = 1)
                            ligne = 3( étoiles = 5 et espace = 0)
                                             }
Et puis nous avons trouvé la relation entre le nombre total de la ligne et de l'espace et l'incrémentation,

donc créera une " boucle for " qui générera une ligne et à l'intérieur de cette boucle
deux autres boucles, la première augmentera les étoiles de 2 et la 2ème boucle diminuera d'un espace et au final ; une "ligne de rupture" pour commencer une nouvelle ligne.

après beaucoup d'efforts et de recherches, nous avons trouvé la solution.

aussi, nous avons travaillé sur les autres défis mais ils étaient normaux comme un programme définissant un nombre si c'est un nombre premier ou non, et un programme qui sort un inverse du nombre qui est donné par l'utilisateur.

donc aujourd'hui je comprends les boucles, aussi le formateur a expliqué l'importance de l'algorithme, et je vois l'avantage que nous donne après l'avoir écrit dans le défi de la pyramide, et comment il rend clair le problème d'écrire des fonctions optimisées.